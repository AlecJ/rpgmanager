"""change timestamp to datetime for good_morning_message table

Revision ID: 8623cf5d5494
Revises: a5ce521a143a
Create Date: 2020-09-30 18:36:16.246620

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8623cf5d5494'
down_revision = 'a5ce521a143a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('poker_game')
    op.drop_index('ix_poker_pot_game_id', table_name='poker_pot')
    op.drop_table('poker_pot')
    op.drop_index('ix_poker_player_to_pot_player_id', table_name='poker_player_to_pot')
    op.drop_index('ix_poker_player_to_pot_pot_id', table_name='poker_player_to_pot')
    op.drop_table('poker_player_to_pot')
    op.drop_index('ix_poker_player_game_id', table_name='poker_player')
    op.drop_table('poker_player')
    op.alter_column('good_morning_message', 'created_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('good_morning_message', 'created_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.create_table('poker_player',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('poker_player_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('client_uuid', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('game_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('money', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('moneyInRound', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_a', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_b', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['poker_game.id'], name='poker_player_game_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='poker_player_pkey'),
    sa.UniqueConstraint('client_uuid', name='poker_player_client_uuid_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_poker_player_game_id', 'poker_player', ['game_id'], unique=False)
    op.create_table('poker_player_to_pot',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['poker_player.id'], name='poker_player_to_pot_player_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pot_id'], ['poker_pot.id'], name='poker_player_to_pot_pot_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='poker_player_to_pot_pkey')
    )
    op.create_index('ix_poker_player_to_pot_pot_id', 'poker_player_to_pot', ['pot_id'], unique=False)
    op.create_index('ix_poker_player_to_pot_player_id', 'poker_player_to_pot', ['player_id'], unique=False)
    op.create_table('poker_pot',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('game_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('round', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['poker_game.id'], name='poker_pot_game_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='poker_pot_pkey')
    )
    op.create_index('ix_poker_pot_game_id', 'poker_pot', ['game_id'], unique=False)
    op.create_table('poker_game',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('started', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('round', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_turn', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dealer_turn', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_a', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_b', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_c', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_d', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_e', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cards_shown', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_raise_player', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_raise_amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('min_raise', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('starting_amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('allow_join_in_progress', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='poker_game_pkey'),
    sa.UniqueConstraint('uuid', name='poker_game_uuid_key')
    )
    # ### end Alembic commands ###
